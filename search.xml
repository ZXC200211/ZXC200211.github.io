<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo+github免费搭建个人博客网站教程</title>
      <link href="/2022/08/24/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/HEXO%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/08/24/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/HEXO%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p><strong>Hexo搭建个人博客</strong><br>   Hexo是一个基于 node.js的快速生成静态博客的开源框架,支持 Markdown和大多数 Octopress插件,一个命令即可部署到 Github页面、 Giteee、 Heroku等,强大的APl,可无限扩展,拥有数百个主题和插件。<br>    它的优点</p><ul><li>不需要服务器，github免费提供的托管服务</li><li>不需要域名，github同样提供了一个.io的域名</li><li>不用自己写xml、hexo提供了很多开源的博客模板</li><li>便于维护更新，换风格直接换模板就行<br> <strong>步骤</strong></li></ul><h1 id="一、配置环境，安装工具"><a href="#一、配置环境，安装工具" class="headerlink" title="一、配置环境，安装工具"></a>一、配置环境，安装工具</h1><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h2><p>Node.js安装及环境配置之Windows篇 (基本是下一步、下一步安装)<br><a href="https://www.cnblogs.com/liuqiyun/p/8133904.html">https://www.cnblogs.com/liuqiyun/p/8133904.html</a><br>  node.js就是运行在服务端的 JavaScript。是一个基于 Chrome V8 引擎的 JavaScript 运行环境，使用了一个事件驱动、非阻塞式 I&#x2F;O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全<img src="https://img-blog.csdnimg.cn/26465ab3dce4466ea763e00bc87421c8.png" alt="请添加图片描述"><br>球最大的开源库生态系统。</p><h2 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2.安装git"></a>2.安装git</h2><p>git是一个开源的分布式版本控制系统，可以有效的处理和管理大大小小的项目版本<br>Windows系统Git安装教程（详解Git安装过程）<br><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p><h2 id="3-检验工具是否安装成功"><a href="#3-检验工具是否安装成功" class="headerlink" title="3.检验工具是否安装成功"></a>3.检验工具是否安装成功</h2><p>win+R打开命令行 分别输入以下命令</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/be3ae30d5ca04aed95248cdd75a5eee0.png" alt="安装成功的标志"><br><strong>成功显示版本号说明安装成功！</strong></p><h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h2><p>使用npm的install命令安装，全局安装</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>同样安装成功后输入 hexo -v 检查是否安装成功！<br><img src="https://img-blog.csdnimg.cn/49ac17e0150e4a3c87d81be4c040e0b4.png" alt="安装成功标志"></p><h1 id="二、搭建仓库"><a href="#二、搭建仓库" class="headerlink" title="二、搭建仓库"></a>二、搭建仓库</h1><h2 id="1-首先注册登录github账号"><a href="#1-首先注册登录github账号" class="headerlink" title="1.首先注册登录github账号"></a>1.首先注册登录github账号</h2><p>具体的注册方法见下方教程<br><a href="https://www.bilibili.com/read/cv5107169">https://www.bilibili.com/read/cv5107169</a></p><h2 id="2-在github上创建一个仓库"><a href="#2-在github上创建一个仓库" class="headerlink" title="2.在github上创建一个仓库"></a>2.在github上创建一个仓库</h2><p>利用github这个仓库作为服务器来存储博客中的内容<br>注意：在建立时，注册名、注册邮箱和密码非常重要，在后续会用到<br>选择New repository，下一步<br>在Repository name下面填写你要创建的地址，这个地址是就是你的域名，以github.io结尾。(例如,填写zxc200211.github.io以后就在地址栏直接输入zxc200211.github.io就可以访问网站)<br>按照提示一步步完成创建。<br>创建之后，点击setting设置远程库：<br><img src="https://img-blog.csdnimg.cn/2fed2c0bbd6241c68c1c867fdea5ff41.png" alt="请添加图片描述"></p><h1 id="三、关联SSH"><a href="#三、关联SSH" class="headerlink" title="三、关联SSH"></a>三、关联SSH</h1><h2 id="1-将github与本地进行绑定，在任意文件夹下右击鼠标，然后点击git-bash-here进入黑窗口"><a href="#1-将github与本地进行绑定，在任意文件夹下右击鼠标，然后点击git-bash-here进入黑窗口" class="headerlink" title="1.将github与本地进行绑定，在任意文件夹下右击鼠标，然后点击git bash here进入黑窗口"></a>1.将github与本地进行绑定，在任意文件夹下右击鼠标，然后点击git bash here进入黑窗口</h2><p><img src="https://img-blog.csdnimg.cn/cd1e42698c124ed9b6c7e505a6255004.png" alt="请添加图片描述"><br>之后输入命令‘ssh’检查是否安装ssh（默认是安装的）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮件地址&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2-输入这个命令后敲四次回车，此时已经在本地建立一个文件夹-默认在C盘用户文件夹下-ssh文件-，找到”id-rsa-pub”文件-里面有公钥-，在github上新建一个SSH-keys，复制文件中的内容到该密钥中"><a href="#2-输入这个命令后敲四次回车，此时已经在本地建立一个文件夹-默认在C盘用户文件夹下-ssh文件-，找到”id-rsa-pub”文件-里面有公钥-，在github上新建一个SSH-keys，复制文件中的内容到该密钥中" class="headerlink" title="2.输入这个命令后敲四次回车，此时已经在本地建立一个文件夹(默认在C盘用户文件夹下.ssh文件)，找到”id_rsa.pub”文件(里面有公钥)，在github上新建一个SSH keys，复制文件中的内容到该密钥中"></a>2.输入这个命令后敲四次回车，此时已经在本地建立一个文件夹(默认在C盘用户文件夹下.ssh文件)，找到”id_rsa.pub”文件(里面有公钥)，在github上新建一个SSH keys，复制文件中的内容到该密钥中</h2><p><img src="https://img-blog.csdnimg.cn/b6b760e5deee4905ab3662c995185660.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/117fe96c416b4b14ab16d148afef0153.png" alt="在这里插入图片描述"></p><h2 id="3-测试是否绑定成功"><a href="#3-测试是否绑定成功" class="headerlink" title="3. 测试是否绑定成功"></a>3. 测试是否绑定成功</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/462c433464e54781a5a5d6c800caaf97.png" alt="在这里插入图片描述"></p><h1 id="四、生成本地博客"><a href="#四、生成本地博客" class="headerlink" title="四、生成本地博客"></a>四、生成本地博客</h1><h2 id="1-在电脑上新建一个文件夹（名字任意取）用来存放本地仓库"><a href="#1-在电脑上新建一个文件夹（名字任意取）用来存放本地仓库" class="headerlink" title="1.在电脑上新建一个文件夹（名字任意取）用来存放本地仓库"></a>1.在电脑上新建一个文件夹（名字任意取）用来存放本地仓库</h2><h2 id="2-鼠标右键git-bash-here"><a href="#2-鼠标右键git-bash-here" class="headerlink" title="2.鼠标右键git bash here"></a>2.鼠标右键git bash here</h2><ol><li>hexo init 初始化GitHub</li></ol><p><img src="https://img-blog.csdnimg.cn/135ac7a2774447ef971f9724f7f37d76.png" alt="在这里插入图片描述"><br><strong>Starting blogging with hexo</strong>完成之后会发现所创建的本地仓库多了很多文件夹</p><ol start="2"><li>hexo s 静态生成本地hexo页面（打开本地服务器）预览<br> <img src="https://img-blog.csdnimg.cn/692bd1b28cd34e32a0b9f65423189fe9.png" alt="在这里插入图片描述"><br>在本地浏览器中输入以上链接就可查看本地博客</li></ol><h1 id="五、将本地博客发布到网上"><a href="#五、将本地博客发布到网上" class="headerlink" title="五、将本地博客发布到网上"></a>五、将本地博客发布到网上</h1><h2 id="1-在之前创建的文件夹中找到官方配置文件-confih-yml并修改"><a href="#1-在之前创建的文件夹中找到官方配置文件-confih-yml并修改" class="headerlink" title="1.在之前创建的文件夹中找到官方配置文件_confih.yml并修改"></a>1.在之前创建的文件夹中找到官方配置文件_confih.yml并修改</h2><p><img src="https://img-blog.csdnimg.cn/0df6cc1a9e1445c6b14a521ce76ee2f2.png" alt="在这里插入图片描述"><br>在配置文件最后粘贴一下内容</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: <span class="string">&quot;仓库地址&quot;</span></span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><h2 id="2-在博客文件夹下鼠标右键git-bash-here"><a href="#2-在博客文件夹下鼠标右键git-bash-here" class="headerlink" title="2.在博客文件夹下鼠标右键git bash here"></a>2.在博客文件夹下鼠标右键git bash here</h2><p>安装hexo-deployer-git 自动部署工具</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="3-上传文件"><a href="#3-上传文件" class="headerlink" title="3.上传文件"></a>3.上传文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>上传成功后登录github仓库，会发现仓库里多了很多本地博客文件</p><h1 id="到此为止我们的博客网站已经搭建完成，并且在浏览器中输入个人域名即可查看个人博客内容。"><a href="#到此为止我们的博客网站已经搭建完成，并且在浏览器中输入个人域名即可查看个人博客内容。" class="headerlink" title="到此为止我们的博客网站已经搭建完成，并且在浏览器中输入个人域名即可查看个人博客内容。"></a>到此为止我们的博客网站已经搭建完成，并且在浏览器中输入个人域名即可查看个人博客内容。</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下用户的添加，切换和删除方法</title>
      <link href="/2022/08/19/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/08/19/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu添加用户"><a href="#Ubuntu添加用户" class="headerlink" title="Ubuntu添加用户"></a>Ubuntu添加用户</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo useradd +username  (useradd命令需要高管权限) </span><br></pre></td></tr></table></figure><p>输入验证密码：<br><img src="https://img-blog.csdnimg.cn/0fe7552e929d4170b031e7c1eab3e38c.png#pic_center"><br> <strong>用户jack1创建成功，通过cat命令来查看新建用户(一般最后一个即为所创建用户)</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">cat etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/9ddf5602bd784cca9fcc6a306ae1f55e.png#pic_center"><br> <strong>用户创建完成后需要设置密码来激活，否则所建用户无法登录</strong><br><img src="https://img-blog.csdnimg.cn/a0be2341d2404a4fbc8800339aa315b3.png#pic_center"><br><strong>创建密码</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo passwd username</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/992cc6e6c950492089573d9ad5e235d6.png#pic_center"><br>Ubuntu下如果只是运行useradd+username的话，它会创建一个三无用户，即：无用户家目录，无指定shell版本（shell是用来解析命令的，它接收用户命令，然后调用相应程序执行），无密码。<br>useradd常用的几个参数<br>-m 自动生成家目录<br>-s  指定用户登入后所使用的shell；如果不设定的话，默认是&#x2F;bin&#x2F;sh<br>-g  指定用户所属的群组；</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo useradd -m -s /bin/bash jack2</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/18d42f75950049cb926cbd23bf3a784f.png#pic_center"></p><p><img src="https://img-blog.csdnimg.cn/3b20b8a1fcc84598a534313110ad7380.png"><br><strong>通过以上命令创建的用户jack2有家目录，shell版本为bash</strong></p><h1 id="用户切换"><a href="#用户切换" class="headerlink" title="用户切换"></a>用户切换</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">su username </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/3d9a9f1140844f23b934fc85a857a6b7.png"></p><h2 id="关于切换root用户提示认证失败的解决方法可查看这篇文章Ubuntu下切换root用户认证失败解决方案"><a href="#关于切换root用户提示认证失败的解决方法可查看这篇文章Ubuntu下切换root用户认证失败解决方案" class="headerlink" title="关于切换root用户提示认证失败的解决方法可查看这篇文章Ubuntu下切换root用户认证失败解决方案"></a><strong>关于切换root用户提示认证失败的解决方法可查看这篇文章</strong><a href="https://blog.csdn.net/m0_56437446/article/details/126187387">Ubuntu下切换root用户认证失败解决方案</a></h2><h1 id="用户的删除"><a href="#用户的删除" class="headerlink" title="用户的删除"></a>用户的删除</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">**sudo userdel username**</span><br></pre></td></tr></table></figure><p>常用参数<br>-r 可以删除家目录<br>-f 强制删除（不论用户是否处在登录状态都会被删除）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>演示</title>
      <link href="/2022/08/12/%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%A0%81%E5%9D%97/"/>
      <url>/2022/08/12/%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%A0%81%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p>介绍</p><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>客户端 </p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p> 客户端（Client）也叫用户端，指的是普通用户使用的终端，客户端有多种形式，比如最常用的就是浏览器、app等，而web开发最主要的客户端形式还是浏览器。</p><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><p> 标签</p><h3 id="三级标题-1"><a href="#三级标题-1" class="headerlink" title="三级标题"></a>三级标题</h3><p>标记：又叫做标签（HTML tag），有特殊的书写规范，是写给浏览器的一种语法格式，结合普通的文字信息，实现特殊的语义或显示内容。在编辑器中可以编辑和查看，在浏览器中不显示。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
